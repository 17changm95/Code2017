// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.Code2017;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.Relay;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController liftSystemTalonLift1WindowMotor;
    public static SpeedController liftSystemTalonLift2WindowMotor;
    public static final int driveMotorLeft = 2; // 2
	public static final int driveMotorLeft_Back = 3 ; //3
	public static final int driveMotorRight = 0; //0
	public static final int driveMotorRight_Back = 1; //2
	
	public static SpeedController BallPickUpSystemTalon; 
	// ze pickup tooll
	public static Relay ballPickUpSpike1;
	
	//Motors for robot components 2017
	public static SpeedController gearFlipSpeedController1;
    public static SpeedController shooterSpeedController1;
    public static SpeedController shooterSpeedController2;
    public static SpeedController gateSpeedController1;
    public static SpeedController climberSpeedController1;
    public static SpeedController drivetrainSpeedController1;
    public static SpeedController drivetrainSpeedController2;
    public static SpeedController drivetrainSpeedController3;
    public static SpeedController drivetrainSpeedController4;


	// Multiplier used to correct the direction of motors
	public static final int driveMotorLeftDir = +1;
	public static final int driveMotorRightDir = 1;
	public static final int driveMotorRightBackDir = 1;
	public static final int driveMotorLeftBackDir = -1;
	

	// Multiplier used for slower speed control
	public static final double CREEP_SPEED = 0.5;
	public static final double CREEP_SPEED_ULTRA = .125;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        liftSystemTalonLift1WindowMotor = new Talon(5);
        LiveWindow.addActuator("LiftSystem", "TalonLift1WindowMotor", (Talon) liftSystemTalonLift1WindowMotor);
        
        liftSystemTalonLift2WindowMotor = new Talon(4);
        LiveWindow.addActuator("LiftSystem", "TalonLift2WindowMotor", (Talon) liftSystemTalonLift2WindowMotor);
        
        ballPickUpSpike1 = new Relay(0);
        LiveWindow.addActuator("BallPickUp", "Spike 1", ballPickUpSpike1);
        
        BallPickUpSystemTalon = new Talon(6);
        
        //Motors for robot components 2017
        gearFlipSpeedController1 = new Talon(2);
        LiveWindow.addActuator("GearFlip", "Speed Controller 1", (Talon) gearFlipSpeedController1);
        
        shooterSpeedController1 = new Talon(0);
        LiveWindow.addActuator("Shooter", "Speed Controller 1", (Talon) shooterSpeedController1);
        
        shooterSpeedController2 = new Talon(1);
        LiveWindow.addActuator("Shooter", "Speed Controller 2", (Talon) shooterSpeedController2);
        
        gateSpeedController1 = new Talon(3);
        LiveWindow.addActuator("Gate", "Speed Controller 1", (Talon) gateSpeedController1);
        
        climberSpeedController1 = new Talon(4);
        LiveWindow.addActuator("Climber", "Speed Controller 1", (Talon) climberSpeedController1);
        
        drivetrainSpeedController1 = new Talon(5);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 1", (Talon) drivetrainSpeedController1);
        
        drivetrainSpeedController2 = new Talon(6);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 2", (Talon) drivetrainSpeedController2);
        
        drivetrainSpeedController3 = new Talon(7);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 3", (Talon) drivetrainSpeedController3);
        
        drivetrainSpeedController4 = new Talon(8);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 4", (Talon) drivetrainSpeedController4);
      

    }

        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
