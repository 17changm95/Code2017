// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.Code2017.commands;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc253.Code2017.Robot;
/**
 *
 */
public class GearAutoCorrect extends SensorData {

    public GearAutoCorrect() {
    	super();
    	requires(Robot.drivetraintank);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double rangeLeft = ultraLeft.getRangeInches();
    	double rangeRight = ultraRight.getRangeInches();
    	boolean isGearAligned = photo.get();
    	boolean isRobotAligned = false;
    	SmartDashboard.putBoolean("Is the robot aligned?", isRobotAligned);
    	SmartDashboard.putBoolean("Is the gear vertically aligned?", isGearAligned);
    	
    	
    	
    	if(isGearAligned == false){
    		if(Math.abs(rangeLeft - rangeRight) < 3.0){
    			isRobotAligned = true;
    			end();
    		} else {
    			isRobotAligned = false;
    			if(rangeLeft > rangeRight){
    				Robot.drivetraintank.setLeft_Back(.5);
        	    	Robot.drivetraintank.setLeft(.5);
    			} else {
        	    	Robot.drivetraintank.setRight(.5);
        	    	Robot.drivetraintank.setRight_Back(.5);
    			}
    		}
    	} else {
    		if(Math.abs(rangeLeft - rangeRight) < 5.0 && Math.abs(rangeLeft - rangeRight) > 3.0){
    			isRobotAligned = true;
    			end();
    		} else {
    			if(rangeLeft > rangeRight){
    				if(Math.abs(rangeLeft - rangeRight) > 5.0){
    					Robot.drivetraintank.setLeft_Back(.5);
            	    	Robot.drivetraintank.setLeft(.5);
    				} else {
    					Robot.drivetraintank.setRight(.5);
            	    	Robot.drivetraintank.setRight_Back(.5);
    				}
    			} else {
    				if(Math.abs(rangeLeft - rangeRight) > 5.0){
    					Robot.drivetraintank.setRight(.5);
            	    	Robot.drivetraintank.setRight_Back(.5);
    				} else {
    					Robot.drivetraintank.setLeft_Back(.5);
            	    	Robot.drivetraintank.setLeft(.5);
    				}
    			}
    		}
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drivetraintank.setLeft_Back(0);
    	Robot.drivetraintank.setLeft(0);
    	Robot.drivetraintank.setRight(0);
    	Robot.drivetraintank.setRight_Back(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
